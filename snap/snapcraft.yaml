name: radarr-tak
summary: UnOfficial release of Radarr v5
description: |
  **Radarr is a movie collection manager for Usenet and BitTorrent users.**
  It can monitor multiple RSS feeds for new movies and will interface
  with clients and indexers to grab, sort, and rename them.
  It can also be configured to automatically upgrade the quality
  of existing files in the library when a better quality format becomes
  available. Note that only one type of a given movie is supported.
  If you want both an 4k version and 1080p version of a given movie
  you will need multiple instances.

  * The web interface is accessible by default at http://localhost:7878
  * See https://radarr.video for more details.

  **Radarr Release 5+**
  * Core20 is still required for Radarr dependencies
  * Service is restarted on any condition.

  **Post install commands required to access media folders and see resources :**

  sudo snap connect radarr-tak:removable-media

  sudo snap connect radarr-tak:mount-observe
website: 'https://radarr.video'
source-code: 'https://github.com/TehAppKiller/radarr-tak'
issues: 'https://github.com/TehAppKiller/radarr-tak/issues'
license: MIT
icon: icon.png
grade: stable
confinement: strict
base: core20
adopt-info: radarr

apps:
  radarr:
    command: bin/run-radarr.sh
    daemon: simple
    restart-condition: always
    plugs:
      - mount-observe
      - network
      - network-bind
      - removable-media

parts:
  radarr:
    plugin: nil
    source: 'http://radarr.servarr.com/v1/update/master/updatefile?os=linux&runtime=netcore&arch=x64'
    source-type: tar
    override-build: |
      snapcraftctl build

      INST_DIR="$SNAPCRAFT_PART_INSTALL/Radarr"
      mkdir -p "$INST_DIR"
      cp -a * "$INST_DIR"

      # Get Last Source Tag version and Check Snap (with same Source) version
      src_version=$(curl -sL "http://radarr.servarr.com/v1/update/master/changes?os=linux&runtime=netcore&arch=x64" | sed -nre "s/^[^0-9]*([0-9\.]*).*/\1/p")
      echo "Source last tag: ${src_version}"
      snap_last_version=$(curl -sL --unix-socket /run/snapd.socket http://localhost/v2/find\?q\=radarr-tak | sed -nre "s/^.*\"version\"\:\"([^\"]*)\".*/\1/p");
      echo "Snap last version: ${snap_last_version}"
      snap_build_with_same_version=$(echo $snap_last_version | sed -nre "s/^($src_version.*).*/\1/p");
      # Same version ?
      if [ -z "$snap_build_with_same_version" ]
      then
        new_snap_version="${src_version}";
      else
        # Get snap build version
        snap_build=$(echo $snap_build_with_same_version | sed -nre 's/^.*-v([0-9]*).*/\1/p');
        # Already a build version ?
        if [ -z "$snap_build" ]
        then
          # init @v2
          new_snap_build="2";
        else
          # increment @v+1
          new_snap_build=$(($snap_build+1));
        fi

        new_snap_version="${src_version}-v${new_snap_build}";
      fi

      snapcraftctl set-version $new_snap_version
    prime:
      - Radarr

  local:
    plugin: dump
    source: snap/local

  deps:
    plugin: nil
    source: .
    stage-packages:
      - liblttng-ust0
      - sqlite3
      - wget
      - libicu66
    stage:
      - usr/bin/sqlite*
      - usr/lib
