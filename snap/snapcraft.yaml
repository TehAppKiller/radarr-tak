name: radarr-tak
summary: UnOfficial release of Radarr v5
description: |
  **Radarr is a movie collection manager for Usenet and BitTorrent users.**
  It can monitor multiple RSS feeds for new movies and will interface
  with clients and indexers to grab, sort, and rename them.
  It can also be configured to automatically upgrade the quality
  of existing files in the library when a better quality format becomes
  available. Note that only one type of a given movie is supported.
  If you want both an 4k version and 1080p version of a given movie
  you will need multiple instances.

  * The web interface is accessible by default at http://localhost:7878
  * See https://radarr.video for more details.

  **Radarr Release 5+**
  * Service is restarted on any condition.

  **Post install commands required to access media folders and see resources :**

  sudo snap connect radarr-tak:removable-media

  sudo snap connect radarr-tak:mount-observe
  
  **!!! Files can only be written in a directory owned by 'root' !!!**
  **!!! Home base directory content is not readable !!!**
  
  This is due to current behavior and restrictions of snaps by Canonical.\
  Check documentation if you want to setup data in /home directory: https://github.com/TehAppKiller/Snapcraft-common-doc/blob/main/README.md#FAQ
website: https://radarr.video
source-code: https://github.com/TehAppKiller/radarr-tak
issues: https://github.com/TehAppKiller/radarr-tak/issues
contact: mailto:tehappkiller@proton.me
donation: https://whydonate.com/en/fundraising/help-teh-devz
license: MIT
icon: icon.svg
grade: stable
confinement: strict
base: core24
adopt-info: radarr
platforms:
  amd64:
  arm64:
  armhf:

apps:
  radarr:
    command: bin/run-radarr.sh
    daemon: simple
    restart-condition: always
    plugs:
      - mount-observe
      - network
      - network-bind
      - removable-media
      - home # useless for now ; if snaps are allowed to read /home folder one day...

parts:
  lttng-ust: # Avoid Core20 dependency
    source-type: git
    source: https://github.com/lttng/lttng-ust.git
    source-tag: v2.12.10
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
      - --libdir=/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR
      - --disable-man-pages
      - --disable-examples
    override-build: |
      ./bootstrap
      craftctl default
    build-packages:
      - liburcu-dev
      - libnuma-dev
    prime:
      - usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/liblttng-ust*.so*
      
  radarr:
    after:
      - lttng-ust
    plugin: nil
    source: .
    override-pull: |
      # Architecture
      case "$CRAFT_ARCH_BUILD_FOR" in
        amd64) SRC_ARCH="x64" ;;
        arm64) SRC_ARCH="arm64" ;;
        armhf) SRC_ARCH="arm" ;;
      esac

      # Pull
      cd "$CRAFT_PART_SRC"
      rm -rf *
      wget "http://radarr.servarr.com/v1/update/master/updatefile?os=linux&runtime=netcore&arch=$SRC_ARCH" -O srcfile
      tar xvf srcfile

      craftctl default
    override-build: |
      # Architecture
      case "$CRAFT_ARCH_BUILD_FOR" in
        amd64) SRC_ARCH="x64" ;;
        arm64) SRC_ARCH="arm64" ;;
        armhf) SRC_ARCH="arm" ;;
      esac

      # Get Last Source Tag version and Check Snap (with same Source) version
      src_version=$(curl -sL "http://radarr.servarr.com/v1/update/master/changes?os=linux&runtime=netcore&arch=$SRC_ARCH" | sed -nre "s/^[^0-9]*([0-9\.]*).*/\1/p")
      echo "Source last tag: ${src_version}"
      snap_last_version=$(curl -sL -H "Snap-Device-Series: 16" "https://api.snapcraft.io/v2/snaps/info/radarr-tak?architecture=${CRAFT_ARCH_BUILD_FOR}&fields=version" | sed -nre "s/^.*\"stable\"\,\"track\"\:\"latest\"\}\,\"version\"\:\"([^\"]*)\".*/\1/p");
      echo "Snap last version: ${snap_last_version}"
      snap_build_with_same_version=$(echo $snap_last_version | sed -nre "s/^($src_version.*).*/\1/p");
      # Same version ?
      if [ -z "$snap_build_with_same_version" ]
      then
        new_snap_version="${src_version}";
      else
        # Get snap build version
        snap_build=$(echo $snap_build_with_same_version | sed -nre 's/^.*-v([0-9]*).*/\1/p');
        # Already a build version ?
        if [ -z "$snap_build" ]
        then
          # init @v2
          new_snap_build="2";
        else
          # increment @v+1
          new_snap_build=$(($snap_build+1));
        fi

        new_snap_version="${src_version}-v${new_snap_build}";
      fi

       craftctl set version=$new_snap_version

      # Pull
      INST_DIR="$CRAFT_PART_INSTALL/Radarr"
      mkdir -p "$INST_DIR"
      cp -a Radarr/* $INST_DIR

      # Build
      craftctl default
    build-packages:
      - curl
      - wget
      - libssl-dev
    prime:
      - Radarr

  local:
    plugin: dump
    source: snap/local
    override-prime: |
      craftctl default
      chmod +rx $CRAFT_PRIME/bin/run-radarr.sh

  deps:
    plugin: nil
    source: .
    stage-packages:
      - liburcu8t64
      - libnuma1
      - sqlite3
      - libicu74
    prime:
      - usr/bin/sqlite*
      - usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/*.so*
